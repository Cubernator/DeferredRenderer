#ifndef COMMON_UTILS_GLH
#define COMMON_UTILS_GLH

#define PI 3.1415926535897932384626433832795

float pow5(float x)
{
	return x * x * x * x * x;
}

float dotClamped(vec3 a, vec3 b)
{
	return max(dot(a, b), 0.0);
}

vec2 transform_uv(vec2 uv, vec4 trans)
{
	return (uv * trans.xy) + trans.zw;
}

vec3 unpack_normal(vec4 n)
{
	return n.rgb * 2.0 - 1.0;
}

vec3 normal_tan2world(vec3 normal, vec3 tangentSpace[3])
{
	normal = tangentSpace[0] * normal.x
		   + tangentSpace[1] * normal.y
		   + tangentSpace[2] * normal.z;

	return normalize(normal);
}

#endif // COMMON_UTILS_GLH
