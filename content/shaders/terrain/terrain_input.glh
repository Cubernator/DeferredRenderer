#include "common/utils.glh"
#include "pbr/pbr_data.glh"

uniform sampler2D albedoMap;
uniform sampler2D albedoMap2;

uniform sampler2D normalMap;
uniform sampler2D normalMap2;

uniform sampler2D glossMap;
uniform sampler2D glossMap2;

uniform sampler2D detailMask;

uniform vec4 uv_transform0;
uniform vec4 uv_transform1;
uniform vec4 uv_transform2;

pbr_data terrain_get_data(vec2 uv, vec3 tangentSpace[3])
{
	vec2 uv0 = transform_uv(uv, uv_transform0);
	vec2 uv1 = transform_uv(uv, uv_transform1);
	vec2 uv2 = transform_uv(uv, uv_transform2);

	float mask = texture(detailMask, uv2).r;

	vec3 albedo0 = texture(albedoMap, uv0).rgb;
	vec4 specular0 = texture(glossMap, uv0);
	vec3 normal0 = unpack_normal(texture(normalMap, uv0));

	vec3 albedo1 = texture(albedoMap2, uv1).rgb;
	vec4 specular1 = texture(glossMap2, uv1);
	vec3 normal1 = unpack_normal(texture(normalMap2, uv1));

	vec4 specSmooth = mix(specular0, specular1, mask);

	vec3 normal = normalize(mix(normal0, normal1, mask));
	normal = normal_tan2world(normal, tangentSpace);

	pbr_data data;
	data.albedo = mix(albedo0, albedo1, mask);
	data.specular = specSmooth.rgb;
	data.smoothness = specSmooth.a;
	data.normal = normal;
	return data;
}
